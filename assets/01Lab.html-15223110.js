import{_ as s,o,c as e,d as a,a as n,b as t}from"./app-e2bc7ac1.js";const c="/assets/01Lab01-a29de5eb.png",i="/assets/01Lab02-ef30868d.png",l={},d=a('<h2 id="实验目的" tabindex="-1"><a class="header-anchor" href="#实验目的" aria-hidden="true">#</a> 实验目的</h2><ol><li>掌握 Android 开发环境的配置</li><li>掌握 Android 项目框架结构</li><li>掌握 Android 项目开发的基本流程</li><li>掌握资源文件 strings.xml 和 colors.xml 的使用方法</li><li>掌握 Toast 的基本使用方法</li></ol><h2 id="实验内容" tabindex="-1"><a class="header-anchor" href="#实验内容" aria-hidden="true">#</a> 实验内容</h2><ol><li><p>Android Studio 环境认知</p><ol><li>检验本机 <code>Java</code> 环境是否工作正常：在 <code>cmd</code> 中输入 <code>java</code> 之后回车，如有有效显示，则本机 <code>Java</code> 环境工作正常。</li><li>检查 <code>Android</code> 开发环境要件：成功安装 <code>Android Studio</code> （v 4.2.1）</li><li>检验 <code>Android</code> 开发环境是否正常：在 <code>Android Studio</code> 中成功创建项目</li><li>查阅编辑窗口文字显示的样式：<code>File</code> -&gt; <code>settings</code> -&gt; 搜索 <code>font</code> 即可</li><li>创建简单的应用，实践模拟运行或者真机运行：<code>File</code> -&gt; <code>New</code> -&gt; <code>New project</code> -&gt; 选择 <code>Phone and Tablet</code> 选项 -&gt; 选择 <code>Empty Activity</code> 模板 -&gt; <code>Next</code> -&gt; 更改项目名称、路径，并将 <code>Language</code> 选择为 <code>Java</code> -&gt; <code>Finish</code></li><li>创建手机环境：<code>Device Manager</code> -&gt; <code>Create Device</code> -&gt; 选择 <code>Phone</code> 选项 -&gt; 选择任一机型 -&gt; <code>Next</code> -&gt; <code>Next</code> -&gt; 在 <code>AVD Name</code> 文本框内重命名 -&gt; <code>Finish</code></li></ol></li><li><p>Android Studio 项目结构认知和项目开发过程</p><ol><li><p>创建 <code>GeoQuiz</code> 项目，观察项目结构，理解每个文件的作用：</p><ol><li>创建 <code>GeoQuiz</code>项目：<code>File</code> -&gt; <code>New</code> -&gt; <code>New project</code> -&gt; 选择 <code>Phone and Tablet</code> 选项 -&gt; 选择 <code>Empty Activity</code> 模板 -&gt; <code>Next</code> -&gt; 项目名称改为 <code>GeoQuiz</code>、更改项目路径，并将 <code>Language</code> 选择为 <code>Java</code> -&gt; <code>Finish</code></li><li>项目结构： <ol><li>项目配置清单文件 <code>AndroidManifest.xml</code>：包含了 <code>Android</code> 系统运行前必须掌握的相关信息，如应用程序名称、图标、应用程序的包名、组件注册信息和权限配置等</li><li>源程序文件夹 <code>Java</code>：<code>Java</code> 程序文件位于 <code>src</code> 文件夹的某个包内</li><li>资源程序文件夹 <code>res</code>：存放字符串、图像、布局等资源</li></ol></li></ol></li><li><p>完成简单界面的设计与实现：</p><p><img src="'+c+`" alt="目标界面"></p></li><li><p>使用 <code>string.xml</code> 设置控件的字符显示：</p><ol><li>在 <code>/res/values</code> 文件夹的 <code>strings.xml</code> 中作如下设置：<code>&lt;string name=&quot;question_text&quot;&gt;WANGYUAN IS A GOOD MAN&lt;/string&gt;</code></li><li>在 <code>activity_main.xml</code> 中引用 <code>android:text=&quot;@string/question_text&quot;</code></li></ol></li><li><p>使用 <code>colors.xml</code> 设置文字的颜色显示：</p><ol><li>在 <code>/res/values</code> 文件夹的 <code>colors.xml</code> 中作如下设置：<code>&lt;color name=&quot;森林绿&quot;&gt;#228B22&lt;/color&gt;</code></li><li>在 <code>activity_main.xml</code> 中引用 <code>android:textColor=&quot;@color/森林绿&quot;</code></li></ol></li><li><p>修改界面的背景为单色背景：设置 <code>android:background=&quot;@color/森林绿&quot;</code></p></li><li><p>修改界面的背景为图片背景：</p><ol><li>将图片 <code>bg.webp</code> 放入 <code>/res/drawable</code> 文件夹中</li><li>设置 <code>android:background=&quot;@drawable/bg&quot;</code></li></ol></li><li><p>设计和实现命令按钮的触发事件，使用 Toast 实现弹出提示条：</p><ol><li><p>设置 <code>activity_main.xml</code> 中的 <code>Button</code> 按钮</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token class-name">Button</span>
    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">&quot;@+id/trueBtn&quot;</span>
    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">&quot;wrap_content&quot;</span>
    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">&quot;wrap_content&quot;</span>
    android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
    android<span class="token operator">:</span>layout_marginRight<span class="token operator">=</span><span class="token string">&quot;5dp&quot;</span>
    android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">&quot;TRUE&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>设置 <code>MainActivity.java</code> 中 <code>Button</code> 按钮的 <code>OnClick</code> 事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 以下代码在 MainActivity 类中</span>
<span class="token class-name">Button</span> trueBtn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">// 以下代码在 onCreate() 方法中</span>
trueBtn <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>trueBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>
trueBtn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ol></li></ol><h2 id="实验结果" tabindex="-1"><a class="header-anchor" href="#实验结果" aria-hidden="true">#</a> 实验结果</h2><p><img src="`+i+'" alt="实验结果"></p>',6),p=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"提示"),n("p",null,[t("点击按钮 TRUE 会弹出文本信息："),n("code",null,"true")])],-1),r=a(`<h2 id="实验总结" tabindex="-1"><a class="header-anchor" href="#实验总结" aria-hidden="true">#</a> 实验总结</h2><ol><li><p><code>drawable</code> 文件存放图片文件，<code>drawable-hdpi</code>、<code>drawable-mdpi</code>、<code>drawable-xhdpi</code>、<code>drawable-xxhdpi</code> 等也可存放图片，且同一图片存入不同文件夹其大小不同</p></li><li><p>在 <code>strings.xml</code> 和 <code>colors.xml</code> 中存放字符和颜色可以提高程序的复用性</p></li><li><p>为 <code>Button</code> 创建 <code>OnClick</code> 事件的流程</p><ol><li>在 <code>MainActivity</code> 类中定义 <code>Button</code> 的对象</li><li>在 <code>onCreate()</code> 方法中绑定 <code>Button</code> 的 <code>id</code></li><li>创建调用 <code>setOnClickListener()</code> 方法进而在匿名内部类中重写 <code>onClick()</code> 方法</li></ol></li><li><p><code>Toast</code> 的基本用法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&quot;Hello, Toast!&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>第一个参数表示当前活动或应用程序的上下文对象，例如：<code>MainActivity.this</code></li><li>第二个参数表示消息内容</li><li>第三个参数表示 <code>Toast</code> 的显示时长，可以是 <code>Toast.LENGTH_SHORT</code> （短时）或 <code>Toast.LENGTH_LONG</code> （长时）</li></ul></li></ol>`,2),u=[d,p,r];function k(v,m){return o(),e("div",null,u)}const h=s(l,[["render",k],["__file","01Lab.html.vue"]]);export{h as default};
