import{_ as e,r as o,o as c,c as l,a as n,b as s,e as t,d as p}from"./app-e2bc7ac1.js";const i="/assets/key01-6e5a5945.png",u="/assets/key02-a928c191.png",r="/assets/key03-d772cd92.png",d="/assets/key04-ad510507.png",k="/assets/key05-e33c2040.png",m="/assets/key06-568db2ea.png",v={},b=n("h2",{id:"numpy",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#numpy","aria-hidden":"true"},"#"),s(" NumPy")],-1),y={id:"arange",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#arange","aria-hidden":"true"},"#",-1),g={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson01.html#numpy-%E6%95%B0%E5%80%BC%E8%8C%83%E5%9B%B4%E6%95%B0%E7%BB%84",target:"_blank",rel:"noopener noreferrer"},w=p(`<ul><li>使用 <code>arange</code> 函数创建数值范围并返回 <code>ndarray</code> 对象</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 起始值，终止值，步长，数据类型</span>
numpy<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> step<span class="token punctuation">,</span> dtype<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[0 1 2 3 4]</p></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[ 1 11 21 31 41 51 61 71 81 91]</p></details>`,6),_={id:"reshape",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#reshape","aria-hidden":"true"},"#",-1),q={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson02.html#%E6%95%B0%E7%BB%84%E5%8F%98%E5%BD%A2",target:"_blank",rel:"noopener noreferrer"},f=p(`<ul><li>不改变数据的条件下修改形状</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 原始数组，新数组的形状，排序风格</span>
numpy<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> newshape<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token comment"># 使用 reshape 调整数组大小</span>
a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 两行三列</span>
b <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 三行两列</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[1 2] [3 4] [5 6]]</p></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;原始数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

b <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;修改后的数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>原始数组： [0 1 2 3 4 5 6 7]</p><p>修改后的数组： [[0 1] [2 3] [4 5] [6 7]]</p></details>`,6),B={id:"logspace",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#logspace","aria-hidden":"true"},"#",-1),E={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson01.html#numpy-%E6%95%B0%E5%80%BC%E8%8C%83%E5%9B%B4%E6%95%B0%E7%BB%84",target:"_blank",rel:"noopener noreferrer"},C=p(`<ul><li>创建一个等比数列</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 起始值，终止值，生成的样本数，对数的底数，数据类型</span>
numpy<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token comment"># 默认底数为 10</span>
<span class="token comment"># 该语句的意思是：在10的1次幂到10的2次幂的闭区间中找到10个公比相同的数字</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[ 10. 12.91549665 16.68100537 21.5443469 27.82559402 35.93813664 46.41588834 59.94842503 77.42636827 100. ]</p></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token comment"># 默认底数为 10</span>
<span class="token comment"># 语句的意思是：在10的1.0次幂到10的2.0次幂的闭区间中找到10个公比相同的数字</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[ 10. 12.91549665 16.68100537 21.5443469 27.82559402 35.93813664 46.41588834 59.94842503 77.42636827 100. ]</p></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token comment"># 语句的意思是：在5的1.0次幂到10的2.0次幂的闭区间中找到3个公比相同的数字</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[ 5. 11.18033989 25. ]</p></details>`,8),F={id:"flatten",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#flatten","aria-hidden":"true"},"#",-1),z={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson02.html#%E6%95%B0%E7%BB%84%E5%8F%98%E5%BD%A2",target:"_blank",rel:"noopener noreferrer"},D=p(`<ul><li>它将多维数组展平为一维数组。</li><li>返回一份数组拷贝，对拷贝所做的修改不会影响原始数组</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 排序风格</span>
ndarray<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span>order<span class="token operator">=</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;原数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 默认按行</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;展开的数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;以 F 风格顺序展开的数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span>order<span class="token operator">=</span><span class="token string">&quot;F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>原数组： [[0 1 2 3] [4 5 6 7]]</p><p>展开的数组： [0 1 2 3 4 5 6 7]</p><p>以 F 风格顺序展开的数组： [0 4 1 5 2 6 3 7]</p></details>`,4),L={id:"swapaxes",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#swapaxes","aria-hidden":"true"},"#",-1),M={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson02.html#%E6%95%B0%E7%BB%84%E7%BF%BB%E8%BD%AC",target:"_blank",rel:"noopener noreferrer"},V={class:"custom-container tip"},Y=n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])],-1),P=n("p",{class:"custom-container-title"},"`rollaxis`",-1),j={href:"https://blog.csdn.net/kieven2008/article/details/80035668",target:"_blank",rel:"noopener noreferrer"},X=p(`<ul><li>对换数组的两个轴</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 原数组，轴1，轴2</span>
numpy<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> axis1<span class="token punctuation">,</span> axis2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;原数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;调用 swapaxes 函数后的数组：&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 交换轴2和轴0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;调用 swapaxes 函数后的数组：&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 交换轴1和轴0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>原数组： [[[0 1] [2 3]]</p><p>[[4 5] [6 7]]]</p><p>调用 swapaxes 函数后的数组： [[[0 4] [2 6]]</p><p>[[1 5] [3 7]]]</p><p>调用 swapaxes 函数后的数组：</p><p>[[[0 1] [4 5]]</p><p>[[2 3] [6 7]]]</p></details>`,4),I={id:"concatenate",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#concatenate","aria-hidden":"true"},"#",-1),T={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson02.html#%E6%95%B0%E7%BB%84%E8%BF%9E%E6%8E%A5",target:"_blank",rel:"noopener noreferrer"},G=p(`<ul><li><code>numpy.concatenate</code> 是用于沿指定轴连接数组的函数。</li><li>它可以沿着已有的轴连接两个或多个数组。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 要连接的数组序列，沿着哪个轴连接数组【默认为0】</span>
numpy<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;第一个数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;第二个数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 两个数组的维度相同</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;沿轴 0 连接两个数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;沿轴 1 连接两个数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>第一个数组： [[1 2] [3 4]]</p><p>第二个数组： [[5 6] [7 8]]</p><p>沿轴 0 连接两个数组： [[1 2] [3 4] [5 6] [7 8]]</p><p>沿轴 1 连接两个数组： [[1 2 5 6] [3 4 7 8]]</p></details>`,4),H={id:"numpy-itemsize",tabindex:"-1"},J=n("a",{class:"header-anchor",href:"#numpy-itemsize","aria-hidden":"true"},"#",-1),O={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson01.html#ndarray-itemsize",target:"_blank",rel:"noopener noreferrer"},Q=p(`<ul><li>用于表示数组中每个元素的字节大小（以字节为单位）。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token comment"># 数组的 dtype 为 int8 （一字节）</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span>
z <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>itemsize<span class="token punctuation">,</span> y<span class="token punctuation">.</span>itemsize<span class="token punctuation">,</span> z<span class="token punctuation">.</span>itemsize<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>1 2 4</p></details>`,3),R={id:"slice",tabindex:"-1"},U=n("a",{class:"header-anchor",href:"#slice","aria-hidden":"true"},"#",-1),W={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson01.html#%E5%88%87%E7%89%87%E5%92%8C%E7%B4%A2%E5%BC%95",target:"_blank",rel:"noopener noreferrer"},Z=p(`<ul><li><code>slice()</code> 函数是用于创建切片对象的内建函数。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 起始位置，终止位置，步长</span>
<span class="token builtin">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> step<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token comment"># 从索引 2 开始到索引 7 停止，间隔为2</span>
a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token builtin">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[2 4 6]</p></details><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> <span class="token builtin">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[1 3 5 7]</p></details>`,6),$={id:"split",tabindex:"-1"},nn=n("a",{class:"header-anchor",href:"#split","aria-hidden":"true"},"#",-1),sn={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson02.html#%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2",target:"_blank",rel:"noopener noreferrer"},an=p(`<ul><li><code>numpy.split</code> 函数用于将数组沿指定轴分割为多个子数组。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 要分割的数组，分割点的位置或分割的块数，沿着哪个轴进行分割【默认为0】</span>
split<span class="token punctuation">(</span>ary<span class="token punctuation">,</span> indices_or_sections<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;第一个数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;将数组分为三个大小相等的子数组：&quot;</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;将数组在一维数组中表明的位置分割：&quot;</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>第一个数组： [0 1 2 3 4 5 6 7 8]</p><p>将数组分为三个大小相等的子数组： [array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8])]</p><p>将数组在一维数组中表明的位置分割： [array([0, 1, 2, 3]), array([4, 5, 6]), array([7, 8])]</p></details>`,4),tn={id:"broadcast-to",tabindex:"-1"},pn=n("a",{class:"header-anchor",href:"#broadcast-to","aria-hidden":"true"},"#",-1),en={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson02.html#%E4%BF%AE%E6%94%B9%E7%BB%B4%E5%BA%A6",target:"_blank",rel:"noopener noreferrer"},on=p(`<ul><li><code>numpy.broadcast_to</code> 函数用于将数组广播到新形状。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 输入数组，新的形状，默认false【为true返回子类，否则返回基类】</span>
numpy<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>array<span class="token punctuation">,</span> shape<span class="token punctuation">,</span> subok<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;原数组：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;调用 broadcast_to 函数之后：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>broadcast_to<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>原数组： [[0 1 2 3]]</p><p>调用 broadcast_to 函数之后： [[0 1 2 3] [0 1 2 3] [0 1 2 3] [0 1 2 3]]</p></details>`,4),cn={id:"sort",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#sort","aria-hidden":"true"},"#",-1),un={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson03.html#numpy-sort",target:"_blank",rel:"noopener noreferrer"},rn=p(`<ul><li><code>numpy.sort</code> 函数用于对数组进行排序。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 要排序的数组, 沿着哪个轴进行排序【默认为最后一个轴】, 排序算法【默认快速排序】, 按该字段排序</span>
numpy<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis<span class="token punctuation">,</span> kind<span class="token punctuation">,</span> order<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我们的数组是：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;调用 sort() 函数：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;按列排序：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 在 sort 函数中排序字段</span>
dt <span class="token operator">=</span> np<span class="token punctuation">.</span>dtype<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;S10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;raju&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;anil&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;ravi&quot;</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;amar&quot;</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>dt<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我们的数组是：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;按 name 排序：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>我们的数组是： [[3 7] [9 1]]</p><p>调用 sort() 函数： [[3 7] [1 9]]</p><p>按列排序： [[3 1] [9 7]]</p><p>我们的数组是： [(b&#39;raju&#39;, 21) (b&#39;anil&#39;, 25) (b&#39;ravi&#39;, 17) (b&#39;amar&#39;, 27)]</p><p>按 name 排序： [(b&#39;amar&#39;, 27) (b&#39;anil&#39;, 25) (b&#39;raju&#39;, 21) (b&#39;ravi&#39;, 17)]</p></details>`,4),dn={id:"view",tabindex:"-1"},kn=n("a",{class:"header-anchor",href:"#view","aria-hidden":"true"},"#",-1),mn={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson03.html#%E8%A7%86%E5%9B%BE%E6%88%96%E6%B5%85%E6%8B%B7%E8%B4%9D",target:"_blank",rel:"noopener noreferrer"},vn=p(`<ul><li><code>view</code> 是指数组的一个视图，它与原始数组共享数据存储</li><li>使用视图，你可以在不复制实际数据的情况下查看或修改数组的某个部分</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment"># 最开始 a 是个 3X2 的数组</span>
a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数组 a：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;创建 a 的视图：&quot;</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> a<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;两个数组的 id() 不同：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 的 id()：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;b 的 id()：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 修改 b 的形状，并不会修改 a</span>
b<span class="token punctuation">.</span>shape <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;b 的形状：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 的形状：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>数组 a：</p><p>[[0 1] [2 3] [4 5]]</p><p>创建 a 的视图：</p><p>[[0 1] [2 3] [4 5]]</p><p>两个数组的 id() 不同：</p><p>a 的 id()：</p><p>2045124909104</p><p>b 的 id()：</p><p>2045534034832</p><p>b 的形状：</p><p>[[0 1 2] [3 4 5]]</p><p>a 的形状：</p><p>[[0 1] [2 3] [4 5]]</p></details><h3 id="copy" tabindex="-1"><a class="header-anchor" href="#copy" aria-hidden="true">#</a> <a href="">copy()</a></h3><ul><li><code>numpy.copy</code> 函数用于创建数组的独立副本。</li><li>独立副本意味着新数组与原数组不共享数据缓冲区，因此对其中一个数组的修改不会影响另一个数组。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment"># 创建一个原始数组</span>
arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 创建一个独立副本</span>
arr_copy <span class="token operator">=</span> np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>

<span class="token comment"># 修改副本</span>
arr_copy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>

<span class="token comment"># 原数组不受影响</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>arr_copy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[1 2 3 4 5]</p><p>[10 2 3 4 5]</p></details>`,7),bn={id:"amin-amax",tabindex:"-1"},yn=n("a",{class:"header-anchor",href:"#amin-amax","aria-hidden":"true"},"#",-1),hn={href:"https://sushu2023.github.io/docs/dataAnalysis/course/A03lesson/A03lesson03.html#%E7%BB%9F%E8%AE%A1%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},gn=p(`<ul><li>numpy.amin() 用于计算数组中的元素沿指定轴的最小值</li><li>numpy.amax() 用于计算数组中的元素沿指定轴的最大值</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我们的数组是：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;调用 amin() 函数：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>amin<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 1 表示轴1，即横轴</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;再次调用 amin() 函数：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>amin<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0 表示轴0，即纵轴</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;调用 amax() 函数：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>amax<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 不加参数表示数组整体元素的最大值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;再次调用 amax() 函数：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>amax<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>我们的数组是： [[3 7 5] [8 4 3] [2 4 9]]</p><p>调用 amin() 函数： [3 3 2]</p><p>再次调用 amin() 函数： [2 4 3]</p><p>调用 amax() 函数： 9</p><p>再次调用 amax() 函数： [8 7 9]</p></details><h2 id="pandas" tabindex="-1"><a class="header-anchor" href="#pandas" aria-hidden="true">#</a> Pandas</h2><h3 id="loc" tabindex="-1"><a class="header-anchor" href="#loc" aria-hidden="true">#</a> <a href="">loc[]</a></h3><ul><li><code>loc</code> 是 Pandas 中用于通过标签进行索引和选择数据的方法。</li><li>它主要用于基于行标签和列标签选择数据。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 行标签，列标签</span>
DataFrame<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>row_label<span class="token punctuation">,</span> column_label<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 创建一个示例 DataFrame</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Age&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;City&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;New York&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;San Francisco&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Los Angeles&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>

<span class="token comment"># 使用 loc 选择数据</span>
selected_data <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>selected_data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>​ Name Age City</p><p>0 Alice 25 New York</p><p>1 Bob 30 San Francisco</p><p>2 Charlie 35 Los Angeles</p><p>Bob</p></details><h3 id="iloc" tabindex="-1"><a class="header-anchor" href="#iloc" aria-hidden="true">#</a> <a href="">iloc[]</a></h3><ul><li><code>iloc</code> 是 Pandas 中用于通过整数位置进行索引和选择数据的方法。</li><li>它主要用于基于行和列的整数位置选择数据。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 行的整数位置，列的整数位置</span>
DataFrame<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>row_index<span class="token punctuation">,</span> column_index<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 创建一个示例 DataFrame</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Age&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;City&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;New York&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;San Francisco&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Los Angeles&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>

<span class="token comment"># 使用 iloc 选择数据</span>
selected_data <span class="token operator">=</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>selected_data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>​ Name Age City</p><p>0 Alice 25 New York</p><p>1 Bob 30 San Francisco</p><p>2 Charlie 35 Los Angeles</p><p>Bob</p></details><h2 id="matplotlib" tabindex="-1"><a class="header-anchor" href="#matplotlib" aria-hidden="true">#</a> Matplotlib</h2><h3 id="plt-title" tabindex="-1"><a class="header-anchor" href="#plt-title" aria-hidden="true">#</a> <a href="">plt.title()</a></h3><ul><li>在 Matplotlib 中，<code>plt.title</code> 函数用于为图形添加标题。</li><li>标题通常用于描述图形的内容或提供关键信息。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 创建一个简单的折线图</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

<span class="token comment"># 添加标题</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Simple Line Chart&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> pad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>在这个例子中，<code>plt.title</code> 添加了一个标题，标题文本为 &#39;Simple Line Chart&#39;，字体大小为16，颜色为蓝色，位置在左侧，距离图形顶部的距离为20点。</p><p><img src="`+i+`" alt="image-20240104091602745"></p></details><h3 id="plt-xlabel" tabindex="-1"><a class="header-anchor" href="#plt-xlabel" aria-hidden="true">#</a> <a href="">plt.xlabel()</a></h3><ul><li><code>plt.xlabel</code> 是 Matplotlib 中用于为图形添加 x 轴标签的函数。</li><li>标签通常用于描述 x 轴的内容或提供关键信息。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 创建一个简单的折线图</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

<span class="token comment"># 添加 x 轴标签</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;X-axis&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>在这个例子中，<code>plt.xlabel</code> 添加了一个 x 轴标签，标签文本为 &#39;X-axis&#39;，字体大小为14，颜色为绿色，距离 x 轴的距离为10点。</p><p><img src="`+u+`" alt="image-20240104091916474"></p></details><h3 id="plt-ylabel" tabindex="-1"><a class="header-anchor" href="#plt-ylabel" aria-hidden="true">#</a> <a href="">plt.ylabel()</a></h3><ul><li><code>plt.ylabel</code> 是 Matplotlib 中用于为图形添加 y 轴标签的函数。</li><li>标签通常用于描述 y 轴的内容或提供关键信息。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 创建一个简单的折线图</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

<span class="token comment"># 添加 y 轴标签</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Y-axis&#39;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;purple&#39;</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>在这个例子中，<code>plt.ylabel</code> 添加了一个 y 轴标签，标签文本为 &#39;Y-axis&#39;，字体大小为14，颜色为紫色，距离 y 轴的距离为15点。</p><p><img src="`+r+`" alt="image-20240104092356614"></p></details><h3 id="plt-plot" tabindex="-1"><a class="header-anchor" href="#plt-plot" aria-hidden="true">#</a> <a href="">plt.plot()</a></h3><ul><li><code>plt.plot()</code> 是 Matplotlib 库中用于绘制图表的函数之一。</li><li>它主要用于绘制二维数据，例如折线图、散点图等。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 创建一个简单的折线图</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Line 1&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加标题和标签</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Simple Line Chart&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;X-axis&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Y-axis&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加图例</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>在这个例子中，<code>plt.plot(x, y, marker=&#39;o&#39;, linestyle=&#39;-&#39;, color=&#39;blue&#39;, label=&#39;Line 1&#39;)</code> 绘制了一个带有圆点标记、实线、蓝色颜色的折线图，并添加了一个标签 &#39;Line 1&#39;。随后，通过 <code>plt.title</code>、<code>plt.xlabel</code> 和 <code>plt.ylabel</code> 添加了标题和轴标签，通过 <code>plt.legend</code> 添加了图例。</p><p><img src="`+d+`" alt="image-20240104092722665"></p></details><h3 id="plt-bar" tabindex="-1"><a class="header-anchor" href="#plt-bar" aria-hidden="true">#</a> <a href="">plt.bar()</a></h3><ul><li><code>plt.bar()</code> 是 Matplotlib 中用于绘制条形图的函数。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 创建一个简单的条形图</span>
categories <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">]</span>
values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>categories<span class="token punctuation">,</span> values<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Category Values&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加标题和标签</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Simple Bar Chart&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Categories&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Values&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加图例</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>在这个例子中，<code>plt.bar(categories, values, color=&#39;green&#39;, width=0.5, align=&#39;center&#39;, label=&#39;Category Values&#39;)</code> 绘制了一个简单的条形图，每个条形表示一个类别的值。随后，通过 <code>plt.title</code>、<code>plt.xlabel</code> 和 <code>plt.ylabel</code> 添加了标题和轴标签，通过 <code>plt.legend</code> 添加了图例。</p><p><img src="`+k+`" alt="image-20240104092846449"></p></details><h3 id="plt-show" tabindex="-1"><a class="header-anchor" href="#plt-show" aria-hidden="true">#</a> <a href="">plt.show()</a></h3><ul><li><code>plt.show()</code> 是 Matplotlib 中用于显示图形的函数。</li><li>当你绘制完图形之后，需要调用 <code>plt.show()</code> 才能将图形显示出来。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 创建一个简单的折线图</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

<span class="token comment"># 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>在这个例子中，<code>plt.show()</code> 将显示由 <code>plt.plot(x, y)</code> 绘制的折线图。确保在你的代码中包含 <code>plt.show()</code>，以便在需要时显示图形。</p><p><img src="`+m+'" alt="image-20240104092948571"></p></details>',39);function wn(_n,xn){const a=o("ExternalLinkIcon");return c(),l("div",null,[b,n("h3",y,[h,s(),n("a",g,[s("arange()"),t(a)])]),w,n("h3",_,[x,s(),n("a",q,[s("reshape()"),t(a)])]),f,n("h3",B,[A,s(),n("a",E,[s("logspace()"),t(a)])]),C,n("h3",F,[N,s(),n("a",z,[s("flatten()"),t(a)])]),D,n("h3",L,[S,s(),n("a",M,[s("swapaxes()"),t(a)])]),n("div",V,[Y,P,n("p",null,[n("a",j,[s("理解numpy 的数组操作rollaxis swapaxes函数"),t(a)])])]),X,n("h3",I,[K,s(),n("a",T,[s("concatenate()"),t(a)])]),G,n("h3",H,[J,s(),n("a",O,[s("numpy.itemsize"),t(a)])]),Q,n("h3",R,[U,s(),n("a",W,[s("slice()"),t(a)])]),Z,n("h3",$,[nn,s(),n("a",sn,[s("split()"),t(a)])]),an,n("h3",tn,[pn,s(),n("a",en,[s("broadcast_to()"),t(a)])]),on,n("h3",cn,[ln,s(),n("a",un,[s("sort()"),t(a)])]),rn,n("h3",dn,[kn,s(),n("a",mn,[s("view()"),t(a)])]),vn,n("h3",bn,[yn,s(),n("a",hn,[s("amin() & amax()"),t(a)])]),gn])}const fn=e(v,[["render",wn],["__file","A00KeyPoint01.html.vue"]]);export{fn as default};
