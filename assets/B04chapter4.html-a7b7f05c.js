import{_ as t,o as e,c as p,d as a,a as n,b as s}from"./app-b8bf1712.js";const o="/assets/chapter1-a08a285d.png",c="/assets/chapter2-12b86d83.png",i="/assets/chapter3-f0f30fd7.png",l="/assets/chapter4-16c12151.png",u={},d=a('<h2 id="activity-的生命周期" tabindex="-1"><a class="header-anchor" href="#activity-的生命周期" aria-hidden="true">#</a> Activity 的生命周期</h2><h3 id="生命周期状态" tabindex="-1"><a class="header-anchor" href="#生命周期状态" aria-hidden="true">#</a> 生命周期状态</h3><table><thead><tr><th>状态</th><th>特点</th></tr></thead><tbody><tr><td><strong>启动状态</strong></td><td>当 <code>Activity</code> 启动之后便会进入下一状态</td></tr><tr><td><strong>运行状态</strong></td><td><code>Activity</code> 处于屏幕最前端，可与用户进行交互</td></tr><tr><td><strong>暂停状态</strong></td><td><code>Activity</code> 仍然可见，但无法获取焦点，用户对他操作没有响应</td></tr><tr><td><strong>停止状态</strong></td><td><code>Activity</code> 完全不可见，系统内存不足时会销毁该 <code>Activity</code></td></tr><tr><td><strong>销毁状态</strong></td><td><code>Activity</code> 将被清理出内存</td></tr></tbody></table><h3 id="生命周期方法" tabindex="-1"><a class="header-anchor" href="#生命周期方法" aria-hidden="true">#</a> 生命周期方法</h3><ul><li>第一次运行程序时调用的生命周期方法为：<code>onCreate()</code> -&gt; <code>onStart()</code> -&gt; <code>onResume()</code></li><li>退出程序时调用的生命周期方法为：<code>onPause()</code> -&gt; <code>onStop()</code> -&gt; <code>onDestory()</code></li></ul><p><img src="'+o+`" alt="image-20231126190824151"></p><h2 id="activity-的创建配置和关闭" tabindex="-1"><a class="header-anchor" href="#activity-的创建配置和关闭" aria-hidden="true">#</a> Activity 的创建配置和关闭</h2><ul><li><code>Intent</code> 被称为意图，是程序中各组件进行交互的一种重要方式，他不仅可以指定当前组件要执行的动作，还可以在不同组件之间进行数据传递</li><li>一般用于启动 <code>Activity</code>、<code>Service</code> 以及发送广播等。根据开启目标组件的方式不同，<code>Intent</code> 被分为两种类型显示意图和隐式意图</li></ul><h2 id="intent-与-intentfilter" tabindex="-1"><a class="header-anchor" href="#intent-与-intentfilter" aria-hidden="true">#</a> Intent 与 IntentFilter</h2><h3 id="显示意图" tabindex="-1"><a class="header-anchor" href="#显示意图" aria-hidden="true">#</a> 显示意图</h3><ul><li>显式意图可以直接通过名称开启指定的目标组件</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 显示意图的使用方法实现页面的跳转</span>
<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>myActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 执行意图</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> myActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="隐式意图" tabindex="-1"><a class="header-anchor" href="#隐式意图" aria-hidden="true">#</a> 隐式意图</h3><ul><li>隐式意图通过指定 <code>action</code> 和 <code>category</code> 等属性，系统根据这些信息进行分析后寻找目标 <code>Activity</code></li></ul><p>首先在 <code>AndroidManifest.xml</code> 中为跳转之后 <code>Activity</code> 设置如下的 <code>intent-filter</code></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello.myActivity<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>action</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.category.DEFAULT<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其次在跳转页面的 <code>.java</code> 文件中输入如下代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 隐式意图：根据 action 属性到清单文件中进行匹配，然后执行匹配上的对应 activity</span>
<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">&quot;hello.myActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),r=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"注意"),n("p",null,[s("在清单文件中为 "),n("code",null,"Activity"),s(" 添加 "),n("code",null,"<intent-filter>"),s(" 标签时，必须添加 "),n("code",null,"action"),s(" 属性，否则隐式 "),n("code",null,"Intent"),s(" 无法开启该 "),n("code",null,"Activity")])],-1),k=a(`<h2 id="activity-之间的跳转" tabindex="-1"><a class="header-anchor" href="#activity-之间的跳转" aria-hidden="true">#</a> Activity 之间的跳转</h2><h3 id="数据传递" tabindex="-1"><a class="header-anchor" href="#数据传递" aria-hidden="true">#</a> 数据传递</h3><p>方式一：<code>.put.Extra</code> 方法</p><ol><li><p>使用 <code>.putExtra</code> 方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> myrecyclerview<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token comment">// intent 传递数据</span>
intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jack123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;hobby&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;学习&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;做饭&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;看电影&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>接收 <code>intent</code> 意图传递的数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 接收 intent 意图对象</span>
<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> name <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">&quot;UserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> gender <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getBooleanExtra</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hobby <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getStringArrayExtra</span><span class="token punctuation">(</span><span class="token string">&quot;hobby&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>myrecyclerview<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名: &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;\\n性别: &quot;</span>
        <span class="token operator">+</span> gender <span class="token operator">+</span> <span class="token string">&quot; 爱好: &quot;</span> <span class="token operator">+</span> hobby<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_LONG</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>方式二：<code>Bundle</code> 类</p><ol><li><p>使用 <code>Bundle</code> 类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Bundle</span> bundle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bundle<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jeny&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bundle<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bundle<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bundle<span class="token punctuation">.</span><span class="token function">putStringArray</span><span class="token punctuation">(</span><span class="token string">&quot;hobby&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;学习&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;做饭&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;看电影&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intent<span class="token punctuation">.</span><span class="token function">putExtras</span><span class="token punctuation">(</span>bundle<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>从 <code>intent</code> 意图对象中获取 <code>bundle</code> 对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Bundle</span> bundle <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getExtras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> name <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> gender <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hobby <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getStringArray</span><span class="token punctuation">(</span><span class="token string">&quot;hobby&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>myrecyclerview<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名: &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;\\n性别: &quot;</span>
        <span class="token operator">+</span> gender <span class="token operator">+</span> <span class="token string">&quot; 爱好: &quot;</span> <span class="token operator">+</span> hobby<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_LONG</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,6),v=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"注意"),n("p",null,[s("数据量多的情况下选择用 "),n("code",null,"Bundle"),s(" 类进行传值")])],-1),m=a(`<h3 id="数据回传" tabindex="-1"><a class="header-anchor" href="#数据回传" aria-hidden="true">#</a> 数据回传</h3><ul><li>页面 2 将数据回传给上一个 <code>Activity</code> 页面 1</li></ul><p>页面 1 代码</p><ul><li><p>设置数据回传意图</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 数据回传按钮的意图</span>
<span class="token class-name">Intent</span> intent1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> myActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 此时 intent1 就变为了寻求 result 的一个意图，同时这个意图的请求编码是 666</span>
<span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent1<span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>接收回传数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token comment">// requestCode 接收请求编码，resultCode 接收结果编码，data 接收回传的 intent 对象</span>
<span class="token comment">// 此方法是在有回传数据产生时自动执行</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Intent</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">==</span> <span class="token number">666</span> <span class="token operator">&amp;&amp;</span> resultCode <span class="token operator">==</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> acquiredData<span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取回传的数据</span>
        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> acquiredData<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>页面 2 代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 数据回传</span>
<span class="token comment">// 创建回传用的意图</span>
<span class="token class-name">Intent</span> intent2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intent2<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 将 intent2 意图作为回传数据的载体，将它设置为 result，结果编码是 999</span>
<span class="token function">setResult</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">,</span> intent2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 关闭当前 activity，即关闭当前页面</span>
<span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="activity-的任务栈和启动模式" tabindex="-1"><a class="header-anchor" href="#activity-的任务栈和启动模式" aria-hidden="true">#</a> Activity 的任务栈和启动模式</h2><h3 id="任务栈" tabindex="-1"><a class="header-anchor" href="#任务栈" aria-hidden="true">#</a> 任务栈</h3><ul><li><p>概念：一种用来存放 <code>Activity</code> 实例的容器</p></li><li><p>特点：“先进后出”</p></li><li><p>操作：压栈和出栈</p></li></ul><h3 id="启动模式" tabindex="-1"><a class="header-anchor" href="#启动模式" aria-hidden="true">#</a> 启动模式</h3><ol><li><code>standard</code> 模式：<code>Activity</code> 的默认启动方式，每启动一个 <code>Activity</code> 就会在栈顶创建一个新的实例</li><li><code>singleTop</code> 模式：会判断要启动的 <code>Activity</code> 实例是否位于栈顶，如果位于栈顶则直接复用，否则创建新的实例</li><li><code>singleTask</code> 模式：下每次启动该 <code>Activity</code> 时，系统首先会检查栈中是否存在当前 <code>Activity</code> 实例，如果存在则直接使用，并把当前 <code>Activity</code> 之上的所有实例全部出栈</li><li><code>singleInstance</code> 模式：会启动一个新的任务栈来管理 <code>Activity</code> 实例，无论从哪个任务栈中启动该 <code>Activity</code> ，该实例在整个系统中只有一个</li></ol><h2 id="使用-fragment" tabindex="-1"><a class="header-anchor" href="#使用-fragment" aria-hidden="true">#</a> 使用 Fragment</h2><h3 id="fragment-概念" tabindex="-1"><a class="header-anchor" href="#fragment-概念" aria-hidden="true">#</a> Fragment 概念</h3><ul><li><code>Fragment</code>（碎片）是一种可以嵌入在 <code>Activity</code> 中的 <code>UI</code> 片段，它可以描述 <code>Activity</code> 中的一部分布局</li></ul><h3 id="fragment-特点" tabindex="-1"><a class="header-anchor" href="#fragment-特点" aria-hidden="true">#</a> Fragment 特点</h3><ul><li><code>Fragment</code> 不能独立存在，必须嵌入到 <code>Activity</code> 中使用，所以 <code>Fragment</code> 生命周期直接受所在的 <code>Activity</code> 影响。</li><li>当在 <code>Activity</code> 中创建 <code>Fragment</code> 时，<code>Fragment</code> 处于启动状态，当 <code>Activity</code> 被暂停时，其中的所有 <code>Fragment</code> 也被暂停，当 <code>Activity</code> 被销毁时，所有在该 <code>Activity</code> 中的 <code>Fragment</code> 也被销毁。当一个 <code>Activity</code> 处于运行状态时，可以单独地对每一个 <code>Fragment</code> 进行操作，如添加或删除，当添加时， <code>Fragment</code> 处于启动状态。当删除时，<code>Fragment</code> 处于销毁状态</li></ul><h3 id="fragment-生命周期" tabindex="-1"><a class="header-anchor" href="#fragment-生命周期" aria-hidden="true">#</a> Fragment 生命周期</h3><p><img src="`+c+'" alt="image-20231126220001922"></p><h3 id="创建-fragment" tabindex="-1"><a class="header-anchor" href="#创建-fragment" aria-hidden="true">#</a> 创建 Fragment</h3><p>静态加载：</p><p><img src="'+i+'" alt="image-20231127094618413"></p><p>动态加载：</p><p><img src="'+l+'" alt="image-20231127094635154"></p>',23),g=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"注意"),n("p",null,[s("推荐使用动态加载 "),n("code",null,"Fragment")])],-1),h=[d,r,k,v,m,g];function b(y,f){return e(),p("div",null,h)}const w=t(u,[["render",b],["__file","B04chapter4.html.vue"]]);export{w as default};
