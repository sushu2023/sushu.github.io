import{_ as p,r as e,o,c,a as n,b as s,e as l,d as a}from"./app-b8bf1712.js";const i="/assets/NumPy(4)-9c4e49cb.png",u="/assets/lesson01-335bf235.png",r="/assets/lesson02-736de786.png",d={},k=n("h2",{id:"numpy-4-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#numpy-4-简介","aria-hidden":"true"},"#"),s(" NumPy(4) 简介")],-1),m=n("p",null,[n("img",{src:i,alt:"image-2023123004"})],-1),b={href:"http://naotu.baidu.com/file/27d8bb7ba8530b5435b501e0052a2ed4?token=fba40d26f8126440",target:"_blank",rel:"noopener noreferrer"},y=a(`<h2 id="矩阵库" tabindex="-1"><a class="header-anchor" href="#矩阵库" aria-hidden="true">#</a> 矩阵库</h2><ul><li><code>NumPy</code> 中包含了一个矩阵库 <code>numpy.matlib</code> ，该模块中的函数返回的是一个矩阵，而不是 <code>ndarray</code> 对象</li></ul><h3 id="matlib-empty" tabindex="-1"><a class="header-anchor" href="#matlib-empty" aria-hidden="true">#</a> matlib.empty()</h3><ul><li>matlib.empty() 函数返回一个新的矩阵</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>numpy<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>empty<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> dtype<span class="token punctuation">,</span> order<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><strong>shape</strong></td><td>定义新矩阵形状的整数或整数元组</td></tr><tr><td><strong>Dtype</strong></td><td>可选，数据类型</td></tr><tr><td><strong>order</strong></td><td>C（行序优先） 或者 F（列序优先）</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 填充为随机数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[1.21696545e-152 1.02188498e-152] [1.99550808e+161 4.83245960e+276]]</p></details><h3 id="numpy-matlib-zeros" tabindex="-1"><a class="header-anchor" href="#numpy-matlib-zeros" aria-hidden="true">#</a> numpy.matlib.zeros()</h3><ul><li>numpy.matlib.zeros() 函数创建一个以 0 填充的矩阵</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[0. 0.] [0. 0.]]</p></details><h3 id="numpy-matlib-ones" tabindex="-1"><a class="header-anchor" href="#numpy-matlib-ones" aria-hidden="true">#</a> numpy.matlib.ones()</h3><ul><li>numpy.matlib.ones() 函数创建一个以 1 填充的矩阵</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[1. 1.] [1. 1.]]</p></details><h3 id="numpy-matlib-eye" tabindex="-1"><a class="header-anchor" href="#numpy-matlib-eye" aria-hidden="true">#</a> numpy.matlib.eye()</h3><ul><li>numpy.matlib.eye() 函数返回一个矩阵，对角线元素为 1，其他位置为零</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>numpy<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n<span class="token punctuation">,</span> M<span class="token punctuation">,</span>k<span class="token punctuation">,</span> dtype<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><strong>n</strong></td><td>返回矩阵的行数</td></tr><tr><td><strong>M</strong></td><td>返回矩阵的列数，默认为 n</td></tr><tr><td><strong>k</strong></td><td>对角线的索引</td></tr><tr><td><strong>dtype</strong></td><td>数据类型</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib 
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np 
 
<span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n <span class="token operator">=</span>  <span class="token number">3</span><span class="token punctuation">,</span> M <span class="token operator">=</span>  <span class="token number">4</span><span class="token punctuation">,</span> k <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span>  <span class="token builtin">float</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[1. 0. 0. 0.] [0. 1. 0. 0.] [0. 0. 1. 0.]]</p></details><h3 id="numpy-matlib-identity" tabindex="-1"><a class="header-anchor" href="#numpy-matlib-identity" aria-hidden="true">#</a> numpy.matlib.identity()</h3><ul><li>numpy.matlib.identity() 函数返回给定大小的单位矩阵</li><li>单位矩阵是个方阵，从左上角到右下角的对角线（称为主对角线）上的元素均为 1，除此以外全都为 0</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment"># 大小为 5，类型位浮点型</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>identity<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[1. 0. 0. 0. 0.] [0. 1. 0. 0. 0.] [0. 0. 1. 0. 0.] [0. 0. 0. 1. 0.] [0. 0. 0. 0. 1.]]</p></details><h3 id="numpy-matlib-rand" tabindex="-1"><a class="header-anchor" href="#numpy-matlib-rand" aria-hidden="true">#</a> numpy.matlib.rand()</h3><ul><li>numpy.matlib.rand() 函数创建一个给定大小的矩阵，数据是随机填充的</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[0.32150496 0.36550133 0.62103423] [0.52475631 0.25503639 0.10987947] [0.35445619 0.76107111 0.50588554]]</p></details>`,30),v=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"注意"),n("p",null,"矩阵总是二维的，而 ndarray 是一个 n 维数组。 两个对象都是可互换的")],-1),h=a(`<h2 id="线性代数模块" tabindex="-1"><a class="header-anchor" href="#线性代数模块" aria-hidden="true">#</a> 线性代数模块</h2><h3 id="概览" tabindex="-1"><a class="header-anchor" href="#概览" aria-hidden="true">#</a> 概览</h3><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>dot</strong></td><td style="text-align:left;">两个数组的点积，即元素对应相乘。</td></tr><tr><td style="text-align:left;"><strong>vdot</strong></td><td style="text-align:left;">两个向量的点积</td></tr><tr><td style="text-align:left;"><strong>inner</strong></td><td style="text-align:left;">两个数组的内积</td></tr><tr><td style="text-align:left;"><strong>matmul</strong></td><td style="text-align:left;">两个数组的矩阵积</td></tr><tr><td style="text-align:left;"><strong>determinant</strong></td><td style="text-align:left;">数组的行列式</td></tr><tr><td style="text-align:left;"><strong>solve</strong></td><td style="text-align:left;">求解线性矩阵方程</td></tr><tr><td style="text-align:left;"><strong>inv</strong></td><td style="text-align:left;">计算矩阵的乘法逆矩阵</td></tr></tbody></table><h3 id="numpy-dot" tabindex="-1"><a class="header-anchor" href="#numpy-dot" aria-hidden="true">#</a> numpy.dot()</h3><ul><li>该函数返回两个数组的点积。</li><li>对于二维向量，其等效于矩阵乘法</li><li>对于一维数组，它是向量的内积</li><li>对于N维数组，它是a的最后一个轴上的和与b的倒数第二个轴的乘积</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[37 40] [85 92]]</p><p>计算式为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">*</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><h3 id="numpy-vdot" tabindex="-1"><a class="header-anchor" href="#numpy-vdot" aria-hidden="true">#</a> numpy.vdot()</h3><ul><li>该函数返回两个向量的点积。如果第一个参数是复数， 那么它的共轭复数会用于计算</li><li>如果参数id是多维数组，它就会被展开</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># vdot 将数组展开计算内积</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>vdot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>130</p><p>计算式为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1</span><span class="token operator">*</span><span class="token number">11</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span><span class="token number">12</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token operator">*</span><span class="token number">13</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">*</span><span class="token number">14</span> <span class="token operator">=</span> <span class="token number">130</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><h3 id="numpy-inner" tabindex="-1"><a class="header-anchor" href="#numpy-inner" aria-hidden="true">#</a> numpy.inner()</h3><ul><li>numpy.inner() 函数返回一维数组的向量内积。对于更高的维度，它返回最后一个轴上的和的乘积</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>inner<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 等价于 1*0+2*1+3*0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>2</p></details><h3 id="numpy-matmul" tabindex="-1"><a class="header-anchor" href="#numpy-matmul" aria-hidden="true">#</a> numpy.matmul</h3><ul><li>numpy.matmul 函数返回两个数组的矩阵乘积。 虽然它返回二维数组的正常乘积，但如果任一参数的维数大于2，则将其视为存在于最后两个索引的矩阵的栈，并进行相应广播</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[4 1] [2 2]]</p></details><h3 id="numpy-linalg-det" tabindex="-1"><a class="header-anchor" href="#numpy-linalg-det" aria-hidden="true">#</a> numpy.linalg.det()</h3><ul><li>numpy.linalg.det() 函数计算输入矩阵的行列式</li><li>对于矩阵[[a，b]，[c，d]]，行列式计算为 ad-bc。 较大的方阵被认为是 2×2 矩阵的组合</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>det<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>-2.0000000000000004</p></details><h3 id="numpy-linalg-solve" tabindex="-1"><a class="header-anchor" href="#numpy-linalg-solve" aria-hidden="true">#</a> numpy.linalg.solve()</h3><ul><li>numpy.linalg.solve() 函数给出了矩阵形式的线性方程的解</li></ul><h3 id="numpy-linalg-inv" tabindex="-1"><a class="header-anchor" href="#numpy-linalg-inv" aria-hidden="true">#</a> numpy.linalg.inv()</h3><ul><li>numpy.linalg.inv() 函数计算矩阵的乘法逆矩阵</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[[1 2] [3 4]] [[-2. 1. ] [ 1.5 -0.5]] [[1.0000000e+00 0.0000000e+00] [8.8817842e-16 1.0000000e+00]]</p></details><h2 id="matplotlib-库" tabindex="-1"><a class="header-anchor" href="#matplotlib-库" aria-hidden="true">#</a> Matplotlib 库</h2><h3 id="安装-matplotlib-库" tabindex="-1"><a class="header-anchor" href="#安装-matplotlib-库" aria-hidden="true">#</a> 安装 Matplotlib 库</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install matplotlib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用以下脚本绘制方程y=2x+ 5。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt

x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> x <span class="token operator">+</span> <span class="token number">5</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot; Matplotlib demo&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;x axis caption&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;y axis caption&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p><img src="`+u+`" alt="image-20231203162953339"></p></details><h2 id="matplotlib-绘制直方图" tabindex="-1"><a class="header-anchor" href="#matplotlib-绘制直方图" aria-hidden="true">#</a> Matplotlib 绘制直方图</h2><h3 id="numpy-histogram" tabindex="-1"><a class="header-anchor" href="#numpy-histogram" aria-hidden="true">#</a> numpy.histogram()</h3><ul><li>numpy.histogram() 函数是数据的频率分布的图形表示。 水平尺寸相等的矩形对应于类间隔，称为 bin，变量 height 对应于频率</li><li>numpy.histogram()函数将输入数组和 bin 作为两个参数。 bin 数组中的连续元素用作每个 bin 的边界</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>histogram<span class="token punctuation">(</span>a<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
hist<span class="token punctuation">,</span> bins <span class="token operator">=</span> np<span class="token punctuation">.</span>histogram<span class="token punctuation">(</span>a<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>hist<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>bins<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[3 4 5 2 1] [ 0 20 40 60 80 100]</p></details><h3 id="plt" tabindex="-1"><a class="header-anchor" href="#plt" aria-hidden="true">#</a> plt()</h3><ul><li>Matplotlib 可以将直方图的数字表示转换为图形</li><li>pyplot 子模块的 plt() 函数将包含数据和 bin 数组的数组作为参数，并转换为直方图</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>a<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;histogram&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p><img src="`+r+`" alt="image-20231203162916028"></p></details><h2 id="io-文件操作" tabindex="-1"><a class="header-anchor" href="#io-文件操作" aria-hidden="true">#</a> IO 文件操作</h2><p><code>NumPy</code> 为 <code>ndarray</code> 对象引入了一个简单的文件格式：<strong>.npy</strong></p><p><code>npy</code> 文件用于存储重建 <code>ndarray</code> 所需的数据、图形、<code>dtype</code> 和其他信息</p><p>常用 IO函数：</p><ul><li><code>load()</code> 和 <code>save()</code> 函数是读写文件数组数据的两个主要函数，默认情况下，数组是以未压缩的原始二进制格式保存在扩展名为 <code>.npy</code> 的文件中</li><li><code>loadtxt()</code> 和 <code>savetxt()</code> 函数处理正常的文本文件( <code>.txt</code> 等)</li></ul><h3 id="numpy-save" tabindex="-1"><a class="header-anchor" href="#numpy-save" aria-hidden="true">#</a> numpy.save()</h3><ul><li><code>numpy.save()</code> 函数将数组保存到以 <code>.npy</code> 为扩展名的文件中</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 保存到 outfile.npy 文件上</span>
np<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&quot;outfile.npy&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>

b <span class="token operator">=</span> np<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">&quot;outfile.npy&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[1 2 3 4 5]</p><p>同时根目录产生一个名为 <code>outfile.npy</code> 的文件</p></details><h3 id="savetxt" tabindex="-1"><a class="header-anchor" href="#savetxt" aria-hidden="true">#</a> savetxt()</h3><ul><li>savetxt() 函数是以简单的文本文件格式存储数据，对应的使用 loadtxt() 函数来获取数据</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span><span class="token string">&quot;out.txt&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">&quot;out.txt&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary class="custom-container-title">运行结果</summary><p>[1. 2. 3. 4. 5.]</p><p>同时根目录产生一个名为 <code>out.txt</code> 的文件</p></details><h2 id="numpy-实例-gps-定位" tabindex="-1"><a class="header-anchor" href="#numpy-实例-gps-定位" aria-hidden="true">#</a> NumPy 实例：GPS 定位</h2><p>略。</p>`,59);function g(x,w){const t=e("ExternalLinkIcon");return o(),c("div",null,[k,m,n("p",null,[n("a",b,[s("脑图连接"),l(t)])]),y,v,h])}const _=p(d,[["render",g],["__file","A03lesson04.html.vue"]]);export{_ as default};
