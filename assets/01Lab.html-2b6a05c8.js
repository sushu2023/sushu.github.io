import{_ as n,o as s,c as a,e as p}from"./app-c67d3ddf.js";const t={},e=p(`<h2 id="实验目的" tabindex="-1"><a class="header-anchor" href="#实验目的" aria-hidden="true">#</a> 实验目的</h2><ol><li>熟悉 Python 编程环境</li><li>掌握 Python 语句及编程方法</li><li>了解 NumPy 库的基本功能</li><li>掌握 NumPy 库对数组的操作与运算</li></ol><h2 id="实验内容" tabindex="-1"><a class="header-anchor" href="#实验内容" aria-hidden="true">#</a> 实验内容</h2><h3 id="python-基础" tabindex="-1"><a class="header-anchor" href="#python-基础" aria-hidden="true">#</a> Python 基础</h3><ol><li><p>从 math 模块中导入（import）圆周率π，并取别名“PI”，计算圆的面积并输出</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># from 模块 import 功能 as 别名</span>
<span class="token keyword">from</span> math <span class="token keyword">import</span> pi <span class="token keyword">as</span> PI

<span class="token comment"># 输入圆的半径</span>
radius <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入圆的半径：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 计算圆的面积并输出</span>
area <span class="token operator">=</span> PI <span class="token operator">*</span> radius<span class="token operator">**</span><span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;半径为 3 的圆的面积是：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">round</span><span class="token punctuation">(</span>area<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建一个字符串，内容为“欢迎学习 Python 语言程序设计！”，采用从前向后索引的方式，截取字符串并输出“学习”；采用从后向前索引的方式，截取字符串并输出“设计”</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>basestr <span class="token operator">=</span> <span class="token string">&quot;欢迎学习 Python 语言程序设计！&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>basestr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 学习</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>basestr<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 设计</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建一个列表，元素依次为：1，2.5，‘test’，3+4j，True，[1, 2], 100，而后分别执行以下操作：</p><ul><li>输出第五个元素</li><li>切片输出前三个元素</li><li>在索引 4 的位置插入字符串“Four”</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>baseList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4j</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>baseList<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输出第五个元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>baseList<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 切片输出前三个元素</span>
baseList<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;Four&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 在索引 4 的位置插入字符串“Four”</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>baseList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行下列语句</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>回答问题：</p><ul><li><p>显示变量 a、b 的值，说出变量 a、b 的数据类型。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>  <span class="token comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>  <span class="token comment"># (1, 2, 3, 4, 5, 6, 7, 8, 9)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># list</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># tuple</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>range 函数的作用是什么？range(15)与 range(1, 15)有何区别？</p><p>在Python中，range函数用于生成一个整数序列，常用于循环中的迭代操作。它可以接受一个或多个参数，用于指定序列的起始值、结束值和步长。</p><p>当只传递一个参数给range函数时，例如<code>range(15)</code>，它将生成一个从0开始、到15（不包括15）结束的整数序列，默认步长为1。</p><p>当传递两个参数给range函数时，例如<code>range(1, 15)</code>，它将生成一个从起始值1开始、到结束值15（不包括15）结束的整数序列，默认步长为1。</p><p>因此，<code>range(15)</code>将生成序列：0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14。</p><p>而<code>range(1, 15)</code>将生成序列：1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14。</p><p>需要注意的是，range函数生成的序列是一个左闭右开的区间，即不包括结束值。</p></li><li><p>生成由 100 以内的奇数构成的列表 c，写出语句并验证。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>c <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h3 id="numpy-实践" tabindex="-1"><a class="header-anchor" href="#numpy-实践" aria-hidden="true">#</a> NumPy 实践</h3><p>pip install numpy</p><ol><li>分别通过列表 [1, 2, 3] 和元组 (4., 5., 6.) 创建 ndarray 对象 a 和 b，输入 a 和 b的内容以及数据类型 dtype</li><li>创建一个 4 x 4 的元素全为 1 的二维数组，并输出数组的形状和元素的个数，设置第一行第二列的元素值为 0 并输出结果</li><li></li></ol><h2 id="实验总结" tabindex="-1"><a class="header-anchor" href="#实验总结" aria-hidden="true">#</a> 实验总结</h2><h2 id="创建虚拟环境" tabindex="-1"><a class="header-anchor" href="#创建虚拟环境" aria-hidden="true">#</a> 创建虚拟环境</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install virtualenv
virtualenv venv
venv\\scripts\\activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","01Lab.html.vue"]]);export{r as default};
